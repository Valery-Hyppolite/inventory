
upstream django {
            server django_app:8000;
        }

server {
    listen 80 default_server;;
    server_name  locahost;

    location / {
        proxy_pass http://django;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }


    location /staticfiles/ {
        alias /app/staticfiles;
        
    }

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    } 
}

# DELETE THE CONFIGURATION ABOVE AND REPLACE IT WITH THIS ONE BELOW AFTER RUNNING DOCKER-COMPOSE BUILD AND DOCKER COMPOSE UP WHEN  GET THE CERBOT CERTIFICATED.
# upstream django {
#             server django_app:8000;
#         }

# server {
#     listen 80;
#      server_name domain name;
#      server_tokens off;

#     location ~ /.well-known/acme-challenge/ {
#             root /var/www/certbot;
#         }

#     #redirect all incoming trafficS from http to https
#     location / {
#         return 301 https://$host$request_uri;
#     }    

# }

# server {
#         listen 443 ssl http2;
#         listen [::]:443 ssl http2;

#         # use the certificates
#         ssl_certificate     /etc/letsencrypt/live/{your domain name here}/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/{your domain name here}/privkey.pem;

#         server_name inventory-system.devprojectspro.com;
        
#         root /var/www/html;
#         index index.php index.html index.htm;


#         location / {
#         proxy_pass http://django;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header Host $host;
#         proxy_redirect off;
#         }   

#         location /your ROOT STATIC FILE/ {
#         alias /app/staticfiles;
        
#         }

#         location ~ /.well-known/acme-challenge/ {
#             root /var/www/certbot;
#         }


#     }